// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TTControlPanel.Services;

namespace TTControlPanel.Migrations
{
    [DbContext(typeof(DBContext))]
    [Migration("20201106122857_19")]
    partial class _19
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TTControlPanel.Models.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CAP");

                    b.Property<string>("City");

                    b.Property<string>("Country");

                    b.Property<string>("Province");

                    b.Property<string>("Street");

                    b.HasKey("Id");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("TTControlPanel.Models.Application", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Applications");
                });

            modelBuilder.Entity("TTControlPanel.Models.ApplicationVersion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AddedUserId");

                    b.Property<int?>("ApplicationId");

                    b.Property<string>("Notes");

                    b.Property<DateTime>("ReleaseDateTimeUtc");

                    b.Property<DateTime>("TimestampDateTimeUtc");

                    b.Property<string>("Version");

                    b.HasKey("Id");

                    b.HasIndex("AddedUserId");

                    b.HasIndex("ApplicationId");

                    b.ToTable("ApplicationsVersions");
                });

            modelBuilder.Entity("TTControlPanel.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AddedUserId");

                    b.Property<int?>("AddressId");

                    b.Property<string>("Code");

                    b.Property<string>("Name");

                    b.Property<DateTime>("TimestampDateTimeUtc");

                    b.Property<string>("VAT");

                    b.HasKey("Id");

                    b.HasIndex("AddedUserId");

                    b.HasIndex("AddressId");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("TTControlPanel.Models.HID", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AddedUserId");

                    b.Property<DateTime>("TimestampDateTimeUtc");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.HasIndex("AddedUserId");

                    b.ToTable("Hids");
                });

            modelBuilder.Entity("TTControlPanel.Models.Invoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code");

                    b.HasKey("Id");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("TTControlPanel.Models.LastLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Api");

                    b.Property<DateTime>("DateTimeUtc");

                    b.Property<int?>("LicenseId");

                    b.HasKey("Id");

                    b.HasIndex("LicenseId");

                    b.ToTable("LastLogs");
                });

            modelBuilder.Entity("TTControlPanel.Models.License", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ActivationDateTimeUtc");

                    b.Property<bool>("Active");

                    b.Property<int?>("ApplicationVersionId");

                    b.Property<bool>("Banned");

                    b.Property<int?>("ClientId");

                    b.Property<string>("ConfirmCode");

                    b.Property<int?>("HidId");

                    b.Property<string>("Notes");

                    b.Property<int?>("ProductKeyId");

                    b.Property<DateTime>("TimestampDateTimeUtc");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationVersionId");

                    b.HasIndex("ClientId");

                    b.HasIndex("HidId");

                    b.HasIndex("ProductKeyId");

                    b.ToTable("Licenses");
                });

            modelBuilder.Entity("TTControlPanel.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ClientId");

                    b.Property<DateTime>("DeliveryDateTimeUtc");

                    b.Property<string>("Description");

                    b.Property<int?>("InvoiceId");

                    b.Property<string>("Name");

                    b.Property<int>("Number");

                    b.Property<DateTime>("TimestampDateTimeUtc");

                    b.Property<int?>("WorkingId");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("WorkingId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("TTControlPanel.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("AveragePrice");

                    b.Property<string>("Code");

                    b.Property<string>("Name");

                    b.Property<double>("SellingPrice");

                    b.Property<DateTime>("TimestampDateTimeUtc");

                    b.Property<int>("VAT");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("TTControlPanel.Models.ProductKey", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("GenerateUserId");

                    b.Property<string>("Key");

                    b.Property<DateTime>("TimestampDateTimeUtc");

                    b.Property<int>("Type");

                    b.HasKey("Id");

                    b.HasIndex("GenerateUserId");

                    b.ToTable("ProductKeys");
                });

            modelBuilder.Entity("TTControlPanel.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<bool>("GrantLogin");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("TTControlPanel.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Ban");

                    b.Property<string>("Email");

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.Property<int?>("RoleId");

                    b.Property<string>("Surname");

                    b.Property<DateTime>("TimestampDateTimeUtc");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TTControlPanel.Models.Working", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code");

                    b.Property<DateTime?>("EndDateTimeUtc");

                    b.Property<int?>("FinalClientId");

                    b.Property<DateTime?>("StartDateTimeUtc");

                    b.Property<int>("State");

                    b.Property<DateTime>("TimestampDateTimeUtc");

                    b.HasKey("Id");

                    b.HasIndex("FinalClientId");

                    b.ToTable("Workings");
                });

            modelBuilder.Entity("TTControlPanel.Models.WorkingItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("OperatorId");

                    b.Property<int?>("ProductId");

                    b.Property<int>("Quantity");

                    b.Property<DateTime>("TimestampDateTimeUtc");

                    b.Property<int?>("WorkingId");

                    b.HasKey("Id");

                    b.HasIndex("OperatorId");

                    b.HasIndex("ProductId");

                    b.HasIndex("WorkingId");

                    b.ToTable("WorkingItem");
                });

            modelBuilder.Entity("TTControlPanel.Models.ApplicationVersion", b =>
                {
                    b.HasOne("TTControlPanel.Models.User", "AddedUser")
                        .WithMany()
                        .HasForeignKey("AddedUserId");

                    b.HasOne("TTControlPanel.Models.Application", "Application")
                        .WithMany("ApplicationVersions")
                        .HasForeignKey("ApplicationId");
                });

            modelBuilder.Entity("TTControlPanel.Models.Client", b =>
                {
                    b.HasOne("TTControlPanel.Models.User", "AddedUser")
                        .WithMany()
                        .HasForeignKey("AddedUserId");

                    b.HasOne("TTControlPanel.Models.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId");
                });

            modelBuilder.Entity("TTControlPanel.Models.HID", b =>
                {
                    b.HasOne("TTControlPanel.Models.User", "AddedUser")
                        .WithMany()
                        .HasForeignKey("AddedUserId");
                });

            modelBuilder.Entity("TTControlPanel.Models.LastLog", b =>
                {
                    b.HasOne("TTControlPanel.Models.License", "License")
                        .WithMany()
                        .HasForeignKey("LicenseId");
                });

            modelBuilder.Entity("TTControlPanel.Models.License", b =>
                {
                    b.HasOne("TTControlPanel.Models.ApplicationVersion", "ApplicationVersion")
                        .WithMany("Licences")
                        .HasForeignKey("ApplicationVersionId");

                    b.HasOne("TTControlPanel.Models.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId");

                    b.HasOne("TTControlPanel.Models.HID", "Hid")
                        .WithMany()
                        .HasForeignKey("HidId");

                    b.HasOne("TTControlPanel.Models.ProductKey", "ProductKey")
                        .WithMany()
                        .HasForeignKey("ProductKeyId");
                });

            modelBuilder.Entity("TTControlPanel.Models.Order", b =>
                {
                    b.HasOne("TTControlPanel.Models.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId");

                    b.HasOne("TTControlPanel.Models.Invoice", "Invoice")
                        .WithMany()
                        .HasForeignKey("InvoiceId");

                    b.HasOne("TTControlPanel.Models.Working", "Working")
                        .WithMany()
                        .HasForeignKey("WorkingId");
                });

            modelBuilder.Entity("TTControlPanel.Models.ProductKey", b =>
                {
                    b.HasOne("TTControlPanel.Models.User", "GenerateUser")
                        .WithMany()
                        .HasForeignKey("GenerateUserId");
                });

            modelBuilder.Entity("TTControlPanel.Models.User", b =>
                {
                    b.HasOne("TTControlPanel.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId");
                });

            modelBuilder.Entity("TTControlPanel.Models.Working", b =>
                {
                    b.HasOne("TTControlPanel.Models.Client", "FinalClient")
                        .WithMany()
                        .HasForeignKey("FinalClientId");
                });

            modelBuilder.Entity("TTControlPanel.Models.WorkingItem", b =>
                {
                    b.HasOne("TTControlPanel.Models.User", "Operator")
                        .WithMany()
                        .HasForeignKey("OperatorId");

                    b.HasOne("TTControlPanel.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId");

                    b.HasOne("TTControlPanel.Models.Working")
                        .WithMany("Items")
                        .HasForeignKey("WorkingId");
                });
#pragma warning restore 612, 618
        }
    }
}
