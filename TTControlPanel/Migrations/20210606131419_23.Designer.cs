// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TTControlPanel.Services;

namespace TTControlPanel.Migrations
{
    [DbContext(typeof(DBContext))]
    [Migration("20210606131419_23")]
    partial class _23
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TTControlPanel.Models.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CAP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Province")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("TTControlPanel.Models.Application", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Applications");
                });

            modelBuilder.Entity("TTControlPanel.Models.ApplicationVersion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AddedUserId")
                        .HasColumnType("int");

                    b.Property<int?>("ApplicationId")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReleaseDateTimeUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("TimestampDateTimeUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AddedUserId");

                    b.HasIndex("ApplicationId");

                    b.ToTable("ApplicationsVersions");
                });

            modelBuilder.Entity("TTControlPanel.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AddedUserId")
                        .HasColumnType("int");

                    b.Property<int?>("AddressId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TimestampDateTimeUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("VAT")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AddedUserId");

                    b.HasIndex("AddressId");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("TTControlPanel.Models.HID", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AddedUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimestampDateTimeUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AddedUserId");

                    b.ToTable("Hids");
                });

            modelBuilder.Entity("TTControlPanel.Models.Invoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("TTControlPanel.Models.KeepAliveRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DurationRequest")
                        .HasColumnType("int");

                    b.Property<bool>("Inizialize")
                        .HasColumnType("bit");

                    b.Property<int>("Response")
                        .HasColumnType("int");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("KeepAliveRequests");
                });

            modelBuilder.Entity("TTControlPanel.Models.LastLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Api")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateTimeUtc")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LicenseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LicenseId");

                    b.ToTable("LastLogs");
                });

            modelBuilder.Entity("TTControlPanel.Models.License", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ActivationDateTimeUtc")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int?>("ApplicationVersionId")
                        .HasColumnType("int");

                    b.Property<bool>("Banned")
                        .HasColumnType("bit");

                    b.Property<int?>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("ConfirmCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HidId")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProductKeyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimestampDateTimeUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationVersionId");

                    b.HasIndex("ClientId");

                    b.HasIndex("HidId");

                    b.HasIndex("ProductKeyId");

                    b.ToTable("Licenses");
                });

            modelBuilder.Entity("TTControlPanel.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DeliveryDateTimeUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("InvoiceId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimestampDateTimeUtc")
                        .HasColumnType("datetime2");

                    b.Property<int?>("WorkingId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("WorkingId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("TTControlPanel.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("AveragePrice")
                        .HasColumnType("float");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("SellingPrice")
                        .HasColumnType("float");

                    b.Property<DateTime>("TimestampDateTimeUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("VAT")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("TTControlPanel.Models.ProductKey", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("GenerateUserId")
                        .HasColumnType("int");

                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TimestampDateTimeUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GenerateUserId");

                    b.ToTable("ProductKeys");
                });

            modelBuilder.Entity("TTControlPanel.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("GrantLogin")
                        .HasColumnType("bit");

                    b.Property<bool>("GrantUseCPanel")
                        .HasColumnType("bit");

                    b.Property<bool>("GrantUseGit")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("TTControlPanel.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Ban")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TimestampDateTimeUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TTControlPanel.Models.Working", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDateTimeUtc")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FinalClientId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDateTimeUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimestampDateTimeUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("FinalClientId");

                    b.ToTable("Workings");
                });

            modelBuilder.Entity("TTControlPanel.Models.WorkingItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("OperatorId")
                        .HasColumnType("int");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimestampDateTimeUtc")
                        .HasColumnType("datetime2");

                    b.Property<int?>("WorkingId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperatorId");

                    b.HasIndex("ProductId");

                    b.HasIndex("WorkingId");

                    b.ToTable("WorkingItem");
                });

            modelBuilder.Entity("TTGitServer.Models.Repository", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DefaultBranch")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsMirror")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPrivate")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumIssues")
                        .HasColumnType("int");

                    b.Property<int>("NumOpenIssues")
                        .HasColumnType("int");

                    b.Property<int>("NumOpenPulls")
                        .HasColumnType("int");

                    b.Property<int>("NumPulls")
                        .HasColumnType("int");

                    b.Property<long>("Size")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<long>("UserID")
                        .HasColumnType("bigint");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Repositories");
                });

            modelBuilder.Entity("TTControlPanel.Models.ApplicationVersion", b =>
                {
                    b.HasOne("TTControlPanel.Models.User", "AddedUser")
                        .WithMany()
                        .HasForeignKey("AddedUserId");

                    b.HasOne("TTControlPanel.Models.Application", "Application")
                        .WithMany("ApplicationVersions")
                        .HasForeignKey("ApplicationId");
                });

            modelBuilder.Entity("TTControlPanel.Models.Client", b =>
                {
                    b.HasOne("TTControlPanel.Models.User", "AddedUser")
                        .WithMany()
                        .HasForeignKey("AddedUserId");

                    b.HasOne("TTControlPanel.Models.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId");
                });

            modelBuilder.Entity("TTControlPanel.Models.HID", b =>
                {
                    b.HasOne("TTControlPanel.Models.User", "AddedUser")
                        .WithMany()
                        .HasForeignKey("AddedUserId");
                });

            modelBuilder.Entity("TTControlPanel.Models.LastLog", b =>
                {
                    b.HasOne("TTControlPanel.Models.License", "License")
                        .WithMany()
                        .HasForeignKey("LicenseId");
                });

            modelBuilder.Entity("TTControlPanel.Models.License", b =>
                {
                    b.HasOne("TTControlPanel.Models.ApplicationVersion", "ApplicationVersion")
                        .WithMany("Licences")
                        .HasForeignKey("ApplicationVersionId");

                    b.HasOne("TTControlPanel.Models.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId");

                    b.HasOne("TTControlPanel.Models.HID", "Hid")
                        .WithMany()
                        .HasForeignKey("HidId");

                    b.HasOne("TTControlPanel.Models.ProductKey", "ProductKey")
                        .WithMany()
                        .HasForeignKey("ProductKeyId");
                });

            modelBuilder.Entity("TTControlPanel.Models.Order", b =>
                {
                    b.HasOne("TTControlPanel.Models.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId");

                    b.HasOne("TTControlPanel.Models.Invoice", "Invoice")
                        .WithMany()
                        .HasForeignKey("InvoiceId");

                    b.HasOne("TTControlPanel.Models.Working", "Working")
                        .WithMany()
                        .HasForeignKey("WorkingId");
                });

            modelBuilder.Entity("TTControlPanel.Models.ProductKey", b =>
                {
                    b.HasOne("TTControlPanel.Models.User", "GenerateUser")
                        .WithMany()
                        .HasForeignKey("GenerateUserId");
                });

            modelBuilder.Entity("TTControlPanel.Models.User", b =>
                {
                    b.HasOne("TTControlPanel.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId");
                });

            modelBuilder.Entity("TTControlPanel.Models.Working", b =>
                {
                    b.HasOne("TTControlPanel.Models.Client", "FinalClient")
                        .WithMany()
                        .HasForeignKey("FinalClientId");
                });

            modelBuilder.Entity("TTControlPanel.Models.WorkingItem", b =>
                {
                    b.HasOne("TTControlPanel.Models.User", "Operator")
                        .WithMany()
                        .HasForeignKey("OperatorId");

                    b.HasOne("TTControlPanel.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId");

                    b.HasOne("TTControlPanel.Models.Working", null)
                        .WithMany("Items")
                        .HasForeignKey("WorkingId");
                });
#pragma warning restore 612, 618
        }
    }
}
